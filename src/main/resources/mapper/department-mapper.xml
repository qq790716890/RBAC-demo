<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rbac_demo.dao.DepartmentMapper">


    <sql id="selectFields">
        id, name, rank, description,create_time, create_user_id,update_time,update_user_id
    </sql>
    <sql id="insertFields">
        name, rank, description,create_time, create_user_id,update_time,update_user_id
    </sql>

    <!-- keyProperty="id"   会在插入后，主动把自增主键即id的值，回写至 Employee 中 -->
    <insert id="insertOne" parameterType="Department" keyProperty="id">
        INSERT into department (<include refid="insertFields"></include>)
        values(#{name},#{rank},#{description}, #{createTime}, #{createUserId}, #{updateTime}, #{updateUserId})
    </insert>


    <update id="updateOne" parameterType="Department">
        UPDATE department
        <set>
            <trim suffixOverrides=",">
                <if test="name != null">name = #{name},</if>
                <if test="rank != null">rank = #{rank},</if>
                <if test="description != null">description = #{description},</if>
                <if test="createTime != null">create_time = #{createTime},</if>
                <if test="createUserId != null">create_user_id = #{createUserId},</if>
                <if test="updateTime != null">update_time = #{updateTime},</if>
                <if test="updateUserId != null">update_user_id = #{updateUserId},</if>
            </trim>
        </set>
        WHERE id = #{id} and is_deleted = 0
    </update>

    <update id="updateOneByDel">
        UPDATE department
        set is_deleted = 1
        WHERE id = #{id};
    </update>


    <select id="findDepartmentById" resultType="Department">
        select <include refid="selectFields"> </include>
        from department
        where id = #{id}
    </select>

    <select id="selectByPage" resultType="Department">
        select <include refid="selectFields"></include>
        from department
        where is_deleted = 0
        <if test="name!=null">
            and name like #{name}
        </if>
        order by create_time desc
        limit #{limit} offset #{offset}
    </select>


    <select id="selectOneById" resultType="Department">
        select <include refid="selectFields"></include>
        from department
        where id = #{id}
        and is_deleted = 0
    </select>

    <select id="selectOneByName" resultType="Department">
        select <include refid="selectFields"></include>
        from department
        where name = #{name}
        and is_deleted = 0
    </select>

    <select id="selectLimitById" resultType="Department">
        select d2.id, d2.name, d2.rank, d2.description,d2.create_time, d2.create_user_id,d2.update_time,d2.update_user_id
        from department d1, department d2
        where d1.id = #{id} and (d1.rank &lt; d2.rank or d1.name = d2.name)
    </select>

    <select id="selectAllCount" resultType="Integer">
        select count(1)
        from department
        where is_deleted = 0
        <if test="name!=null">
            and name like #{name}
        </if>
        order by create_time desc, update_time desc
    </select>


</mapper>